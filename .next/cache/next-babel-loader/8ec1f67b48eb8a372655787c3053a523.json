{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andresavic/Code/Privat/HauDenLukas/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Matter from 'matter-js';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.d();\n      console.log('GrandChild did mount.');\n      setTimeout(function () {\n        _this2.highestPoint = 1000;\n        _this2.highestPointArrived = false;\n        Matter.Body.setMass(_this2.frosch, 1);\n        Matter.Body.applyForce(_this2.frosch, _this2.frosch.position, {\n          x: 0,\n          y: -0.07\n        });\n      }, 1000);\n    }\n  }, {\n    key: \"d\",\n    value: function d() {\n      var _this3 = this;\n\n      var Engine = Matter.Engine,\n          Render = Matter.Render,\n          World = Matter.World,\n          Events = Matter.Events,\n          Bodies = Matter.Bodies;\n      var engine = Engine.create();\n      var render = Render.create({\n        element: document.body,\n        engine: engine\n      });\n      this.highestPoint = 1000;\n      this.highestPointArrived = true;\n      this.frosch = Bodies.rectangle(400, 600, 20, 20);\n      this.frosch.restitution = 0.8;\n      this.end = Bodies.rectangle(400, 100, 100, 20, {\n        isStatic: true\n      });\n      var ground = Bodies.rectangle(400, 610, 810, 60, {\n        isStatic: true\n      });\n      World.add(engine.world, [this.frosch, this.end, ground]); // run the engine\n\n      Engine.run(engine); // run the renderer\n\n      Render.run(render);\n      Events.on(engine, 'afterUpdate', function (event) {\n        var engine = event.source;\n\n        if (_this3.highestPointArrived === false && _this3.frosch.position.y > _this3.highestPoint) {\n          _this3.highestPointArrived = true;\n          console.log(\"HIGHET POINT\", _this3.highestPoint);\n          Matter.World.addBody(engine.world, Bodies.rectangle(350, _this3.highestPoint + 10, 150, 2, {\n            isStatic: true,\n            isSensor: true\n          }));\n        } else {\n          _this3.highestPoint = _this3.frosch.position.y;\n        } //console.log(this.frosch.position);\n\n      });\n      Events.on(engine, 'collisionStart', function (event) {\n        console.log(\"coll\");\n        var pairs = event.pairs; // change object colours to show those in an active collision (e.g. resting contact)\n\n        for (var i = 0; i < pairs.length; i++) {\n          var pair = pairs[i];\n          pair.bodyA.render.fillStyle = '#333';\n          pair.bodyB.render.fillStyle = '#333';\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Hau den Lukas\");\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var req, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                req = _ref.req, res = _ref.res;\n                return _context.abrupt(\"return\", {});\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/andresavic/Code/Privat/HauDenLukas/pages/index.js"],"names":["React","Component","Matter","App","props","state","d","console","log","setTimeout","highestPoint","highestPointArrived","Body","setMass","frosch","applyForce","position","x","y","Engine","Render","World","Events","Bodies","engine","create","render","element","document","body","rectangle","restitution","end","isStatic","ground","add","world","run","on","event","source","addBody","isSensor","pairs","i","length","pair","bodyA","fillStyle","bodyB","req","res"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Matter from 'matter-js';\n\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {}\n  }\n\n\n  static async getInitialProps({req, res}) {\n\n     return {};\n  }\n\n\n  componentDidMount() {\n    this.d();\n    console.log('GrandChild did mount.');\n    setTimeout(() => {\n      this.highestPoint = 1000;\n      this.highestPointArrived = false;\n      Matter.Body.setMass(this.frosch, 1)\n      Matter.Body.applyForce(this.frosch, this.frosch.position, { x: 0, y: -0.07 });\n    }, 1000);\n  }\n\n  d(){\n    var Engine = Matter.Engine,\n        Render = Matter.Render,\n        World = Matter.World,\n        Events = Matter.Events,\n        Bodies = Matter.Bodies;\n\n    var engine = Engine.create();\n\n    var render = Render.create({\n        element: document.body,\n        engine: engine\n    });\n\n    this.highestPoint = 1000;\n    this.highestPointArrived = true;\n\n\n    this.frosch = Bodies.rectangle(400, 600, 20, 20);\n    this.frosch.restitution = 0.8;\n\n    this.end = Bodies.rectangle(400, 100, 100, 20, { isStatic: true});\n\n\n    var ground = Bodies.rectangle(400, 610, 810, 60, { isStatic: true });\n\n    World.add(engine.world, [this.frosch, this.end, ground]);\n\n        // run the engine\n    Engine.run(engine);\n\n    // run the renderer\n    Render.run(render);\n\n    Events.on(engine, 'afterUpdate', (event) => {\n        var engine = event.source;\n\n        if (this.highestPointArrived === false && this.frosch.position.y > this.highestPoint){\n          this.highestPointArrived = true;\n          console.log(\"HIGHET POINT\", this.highestPoint);\n          Matter.World.addBody(engine.world, Bodies.rectangle(350, this.highestPoint + 10, 150, 2, { isStatic: true, isSensor: true }));\n        }else{\n          this.highestPoint = this.frosch.position.y;\n        }\n\n\n\n        //console.log(this.frosch.position);\n    });\n    Events.on(engine, 'collisionStart', (event) => {\n      console.log(\"coll\");\n      var pairs = event.pairs;\n\n      // change object colours to show those in an active collision (e.g. resting contact)\n      for (var i = 0; i < pairs.length; i++) {\n          var pair = pairs[i];\n          pair.bodyA.render.fillStyle = '#333';\n          pair.bodyB.render.fillStyle = '#333';\n      }\n    });\n\n  }\n\n  render () {\n    return (\n      <div>\n        Hau den Lukas\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}