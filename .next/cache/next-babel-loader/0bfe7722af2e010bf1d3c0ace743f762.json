{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andresavic/Code/Privat/HauDenLukas/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Matter from 'matter-js';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"scale\",\n    value: function scale(num, in_min, in_max, out_min, out_max) {\n      return (num - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.d();\n      console.log('GrandChild did mount.');\n      setTimeout(function () {\n        _this2.highestPoint = 1000;\n        _this2.highestPointArrived = false;\n        Matter.Body.setMass(_this2.frosch, 1);\n        Matter.Body.applyForce(_this2.frosch, _this2.frosch.position, {\n          x: 0,\n          y: -0.09\n        });\n      }, 1000);\n    }\n  }, {\n    key: \"d\",\n    value: function d() {\n      var _this3 = this;\n\n      var Engine = Matter.Engine,\n          Render = Matter.Render,\n          World = Matter.World,\n          Events = Matter.Events,\n          Bodies = Matter.Bodies;\n      var engine = Engine.create();\n      var render = Render.create({\n        element: document.body,\n        engine: engine\n      });\n      this.highestPoint = 1000;\n      this.highestPointArrived = true;\n      this.frosch = Bodies.rectangle(400, 600, 20, 20);\n      this.frosch.restitution = 0.8;\n      this.end = Bodies.rectangle(400, 0, 100, 0, {\n        label: \"bell\",\n        isStatic: true\n      });\n      var ground = Bodies.rectangle(400, 630, 810, 60, {\n        isStatic: true\n      });\n      World.add(engine.world, [this.frosch, this.end, ground]); // run the engine\n\n      Engine.run(engine); // run the renderer\n\n      Render.run(render);\n      Events.on(engine, 'afterUpdate', function (event) {\n        var engine = event.source;\n\n        if (_this3.highestPointArrived === false && _this3.frosch.position.y > _this3.highestPoint) {\n          _this3.highestPointArrived = true;\n          var m = Math.round(_this3.highestPoint - 10);\n          console.log(\"HIGHET POINT\", m);\n          Matter.World.addBody(engine.world, Bodies.rectangle(400, m, 200, 2, {\n            isStatic: true,\n            isSensor: true\n          }));\n        } else {\n          _this3.highestPoint = _this3.frosch.position.y;\n        } //console.log(this.frosch.position);\n\n      });\n      Events.on(engine, 'collisionStart', function (event) {\n        console.log(\"coll\");\n        var pairs = event.pairs; // change object colours to show those in an active collision (e.g. resting contact)\n\n        for (var i = 0; i < pairs.length; i++) {\n          var pair = pairs[i];\n          console.log(pair);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Hau den Lukas\");\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var req, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                req = _ref.req, res = _ref.res;\n                return _context.abrupt(\"return\", {});\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/andresavic/Code/Privat/HauDenLukas/pages/index.js"],"names":["React","Component","Matter","App","props","state","num","in_min","in_max","out_min","out_max","d","console","log","setTimeout","highestPoint","highestPointArrived","Body","setMass","frosch","applyForce","position","x","y","Engine","Render","World","Events","Bodies","engine","create","render","element","document","body","rectangle","restitution","end","label","isStatic","ground","add","world","run","on","event","source","m","Math","round","addBody","isSensor","pairs","i","length","pair","req","res"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Matter from 'matter-js';\n\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {}\n  }\n\n\n  static async getInitialProps({req, res}) {\n\n     return {};\n  }\n\n  scale(num, in_min, in_max, out_min, out_max) {\n    return (num - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n  }\n\n  componentDidMount() {\n    this.d();\n    console.log('GrandChild did mount.');\n    setTimeout(() => {\n      this.highestPoint = 1000;\n      this.highestPointArrived = false;\n      Matter.Body.setMass(this.frosch, 1)\n      Matter.Body.applyForce(this.frosch, this.frosch.position, { x: 0, y: -0.09 });\n    }, 1000);\n  }\n\n  d(){\n    var Engine = Matter.Engine,\n        Render = Matter.Render,\n        World = Matter.World,\n        Events = Matter.Events,\n        Bodies = Matter.Bodies;\n\n    var engine = Engine.create();\n\n    var render = Render.create({\n        element: document.body,\n        engine: engine\n    });\n\n    this.highestPoint = 1000;\n    this.highestPointArrived = true;\n\n    this.frosch = Bodies.rectangle(400, 600, 20, 20);\n    this.frosch.restitution = 0.8;\n\n    this.end = Bodies.rectangle(400, 0, 100, 0, { label: \"bell\", isStatic: true});\n\n\n    var ground = Bodies.rectangle(400, 630, 810, 60, { isStatic: true });\n\n    World.add(engine.world, [this.frosch, this.end, ground]);\n\n        // run the engine\n    Engine.run(engine);\n\n    // run the renderer\n    Render.run(render);\n\n    Events.on(engine, 'afterUpdate', (event) => {\n        var engine = event.source;\n\n        if (this.highestPointArrived === false && this.frosch.position.y > this.highestPoint){\n          this.highestPointArrived = true;\n\n          let m = Math.round(this.highestPoint - 10);\n          console.log(\"HIGHET POINT\", m);\n          Matter.World.addBody(engine.world, Bodies.rectangle(400, m, 200, 2, { isStatic: true, isSensor: true }));\n        }else{\n          this.highestPoint = this.frosch.position.y;\n        }\n\n\n\n        //console.log(this.frosch.position);\n    });\n    Events.on(engine, 'collisionStart', (event) => {\n      console.log(\"coll\");\n      var pairs = event.pairs;\n\n      // change object colours to show those in an active collision (e.g. resting contact)\n      for (var i = 0; i < pairs.length; i++) {\n          var pair = pairs[i];\n          console.log(pair);\n      }\n    });\n\n  }\n\n  render () {\n    return (\n      <div>\n        Hau den Lukas\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}